import{k as s,F as a,$ as o,W as n,V as l,H as e,M as p}from"./chunks/framework.e8799e72.js";import{_ as t}from"./chunks/StackBlitzLiveExample.27a22aa2.js";const c=n('<h1 id="product-detail-page" tabindex="-1">Product Detail Page <a class="header-anchor" href="#product-detail-page" aria-label="Permalink to &quot;Product Detail Page&quot;">​</a></h1><p>In this chapter you will find how to build static product detail page on short example.</p><img src="/assets/pdp-md.33a89ed8.png" alt="Image of Product Detail Page example" class="border-1px border-#eeeeee rounded-md shadow-md my-8 hover:shadow-2xl hover:scale-105 transition duration-200"><h2 id="get-product-data" tabindex="-1">Get Product data <a class="header-anchor" href="#get-product-data" aria-label="Permalink to &quot;Get Product data&quot;">​</a></h2><p>In order to display information of a product there is a <code>Product</code> object needed, containing basic information like:</p><ul><li>Name</li><li>Price</li><li>Description</li><li>Properties</li><li>Images</li><li>...</li></ul><p>To achieve that, you can utilize methods available within <code>composables</code> package (or directly via API client package named <code>@shopware-pwa/api-client</code>). In this example we will use <a href="./../../../packages/composables/useProductSearch.html">useProductSearch</a>.</p><div class="info custom-block"><p class="custom-block-title">Associations</p><p>Keep in mind that not every field, or inner object of the <code>Product</code> entity is available automatically. Some of relations need to be assigned explicitly by <a href="https://shopware.stoplight.io/docs/store-api/cf710bf73d0cd-search-queries#associations" target="_blank" rel="noreferrer">associations</a>. The most common case is <code>media</code> object like <code>product.cover</code> or <code>product.media</code>, which keep additional information about the images: img url, thumbnails and so on.</p></div><p>The <code>useProductSearch</code> allows us to <code>search</code> in the product&#39;s collection:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Product</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">PropertyGroup</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@shopware-pwa/types</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">useProductSearch</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@shopware-pwa/composables-next</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> search </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useProductSearch</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> productResponse </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">search</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">some-product-id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/** parameters omitted */</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// object that keeps a Product entity</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> product</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Product</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> productResponse</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">product</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// object with variants configuration</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> propertyGroups</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">PropertyGroup</span><span style="color:#A6ACCD;">[] </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> productResponse</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">configurator</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span></code></pre></div><p>Thanks to this, in the response we are able to access <code>Product</code> and <code>configurator</code> object. The latter is responsible for keeping related variants information to be used for more complex products.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>If you are using Nuxt.js and a <code>Product</code> entity object contains <code>.cmsPage</code> property, you can also utilize <code>@shopware-pwa/cms-base</code> Nuxt 3 module to display the whole Product page designed in Shopping Experiences.</p></div><p>Having source of the data, you can display all you need in your Vue.js template:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">computed</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">...</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> productName </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">computed</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> product</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">?.</span><span style="color:#A6ACCD;">translated</span><span style="color:#89DDFF;">?.</span><span style="color:#A6ACCD;">name)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> manufacturer </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">computed</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> product</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">?.</span><span style="color:#A6ACCD;">manufacturer</span><span style="color:#89DDFF;">?.</span><span style="color:#A6ACCD;">name)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> description </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">computed</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> product</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">?.</span><span style="color:#A6ACCD;">translated</span><span style="color:#89DDFF;">?.</span><span style="color:#A6ACCD;">description)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> productNumber </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">computed</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> product</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">?.</span><span style="color:#A6ACCD;">productNumber)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">...</span></span>\n<span class="line"></span></code></pre></div><h2 id="load-additional-data-asynchronously" tabindex="-1">Load additional data asynchronously <a class="header-anchor" href="#load-additional-data-asynchronously" aria-label="Permalink to &quot;Load additional data asynchronously&quot;">​</a></h2><p>Each product can have additional resource loaded asynchronously like Cross-Sells, or Customer Reviews.</p><p>Thanks to <a href="./../../../packages/composables/useProductAssociations.html">useProductAssociations</a> composable, you can load it providing the product you are on:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> loadAssociations</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> isLoading</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> productAssociations </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">useProductAssociations</span><span style="color:#A6ACCD;">(product</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">associationContext</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cross-selling</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span></code></pre></div><h2 id="full-source" tabindex="-1">Full source <a class="header-anchor" href="#full-source" aria-label="Permalink to &quot;Full source&quot;">​</a></h2>',19),r=l("h2",{id:"live-demo",tabindex:"-1"},[e("Live demo "),l("a",{class:"header-anchor",href:"#live-demo","aria-label":'Permalink to "Live demo"'},"​")],-1),i=JSON.parse('{"title":"Product Detail Page","description":"","frontmatter":{},"headers":[{"level":2,"title":"Get Product data","slug":"get-product-data","link":"#get-product-data","children":[]},{"level":2,"title":"Load additional data asynchronously","slug":"load-additional-data-asynchronously","link":"#load-additional-data-asynchronously","children":[]},{"level":2,"title":"Full source","slug":"full-source","link":"#full-source","children":[]},{"level":2,"title":"Live demo","slug":"live-demo","link":"#live-demo","children":[]}],"relativePath":"getting-started/e-commerce/product-detail-page.md","filePath":"getting-started/e-commerce/product-detail-page.md"}'),y={name:"getting-started/e-commerce/product-detail-page.md"},D=Object.assign(y,{setup:n=>(n,l)=>{const e=p("PageRef");return s(),a("div",null,[c,o(e,{page:"https://github.com/shopware/frontends/tree/main/examples/product-detail-page",title:"Product Detail Page Example",target:"_blank",sub:"Explore full example of PDP implementation"}),r,o(t,{projectPath:"shopware/frontends/tree/main/examples/product-detail-page",openPath:"/"})])}});export{i as __pageData,D as default};
