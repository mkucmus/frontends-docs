import{_ as s,k as o,F as a,W as n}from"./chunks/framework.e8799e72.js";const t=JSON.parse('{"title":"Custom Products extension","description":"","frontmatter":{"head":[["meta",{"name":"og:title","content":"Integrations: Custom Products - Shopware Frontends"}],["meta",{"name":"og:description","content":"Example of integration with Custom Products extension"}],["meta",{"name":"og:image","content":"https://frontends-og-image.vercel.app/Integration:%20**Custom%20Products**?fontSize=100px"}]]},"headers":[{"level":2,"title":"Logic: Composable function","slug":"logic-composable-function","link":"#logic-composable-function","children":[{"level":3,"title":"Example of usage:","slug":"example-of-usage","link":"#example-of-usage","children":[]}]},{"level":2,"title":"Presentation: Vue component","slug":"presentation-vue-component","link":"#presentation-vue-component","children":[]},{"level":2,"title":"Implementation","slug":"implementation","link":"#implementation","children":[]},{"level":2,"title":"Known issues","slug":"known-issues","link":"#known-issues","children":[]}],"relativePath":"getting-started/features/custom-products.md","filePath":"getting-started/features/custom-products.md"}'),e={name:"getting-started/features/custom-products.md"},l=[n('<h1 id="custom-products-extension" tabindex="-1">Custom Products extension <a class="header-anchor" href="#custom-products-extension" aria-label="Permalink to &quot;Custom Products extension&quot;">​</a></h1><p>The example explains how <strong>Custom Products</strong> feature is implemented in <code>vue-demo-store</code> template (already done), but also can be used as a guide how to deal with the process in any project.</p><div class="warning custom-block"><p class="custom-block-title">Custom Products for Shopware 6 is an extension that is part of the Shopware Rise plan.</p><p><a href="https://docs.shopware.com/en/shopware-6-en/extensions/customproducts" target="_blank" rel="noreferrer">Read more</a>.</p></div><h2 id="logic-composable-function" tabindex="-1">Logic: Composable function <a class="header-anchor" href="#logic-composable-function" aria-label="Permalink to &quot;Logic: Composable function&quot;">​</a></h2><p>See <a href="https://github.com/shopware/frontends/blob/main/examples/commercial-customized-products/src/composables/useProductCustomizedProductConfigurator.ts" target="_blank" rel="noreferrer">the source code</a> of <code>useProductCustomizedProductConfigurator</code> composable function.</p><p>The composable is a main place to keep the logic related to <em>custom product</em> features:</p><ul><li>adds TypeScript types</li><li>stores the state</li><li>extracts the custom product&#39;s specific data</li><li>exposes method for adding to cart</li><li>serializes the state to be in a correct format for the request&#39;s payload (adding to cart)</li></ul><h3 id="example-of-usage" tabindex="-1">Example of usage: <a class="header-anchor" href="#example-of-usage" aria-label="Permalink to &quot;Example of usage:&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Works only if the <code>useProduct</code> is fulfilled and the product data is known. Typically on Product Details Page, when the product context is provided.</p><p>Visit the <a href="./../../packages/composables/useProduct.html">useProduct</a> reference to see more details.</p></div><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">// useProductCustomizedProductConfigurator is autoimported</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// in vue-demo-store template as it&#39;s located in ~/composables</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  isActive</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// indicates whether product is empowered by Custom Products extension and active</span></span>\n<span class="line"><span style="color:#A6ACCD;">  customizedProduct</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// returns the custom product&#39;s template data</span></span>\n<span class="line"><span style="color:#A6ACCD;">  state</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// state to be used in option selector / forms</span></span>\n<span class="line"><span style="color:#A6ACCD;">  addToCart</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// triggers add to cart action (refreshCart() action invoked afterwards)</span></span>\n<span class="line"><span style="color:#A6ACCD;">  handleFileUpload</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// uploads an image, then gets mediaId from API and assigns it to the state</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useProductCustomizedProductConfigurator</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span></code></pre></div><h2 id="presentation-vue-component" tabindex="-1">Presentation: Vue component <a class="header-anchor" href="#presentation-vue-component" aria-label="Permalink to &quot;Presentation: Vue component&quot;">​</a></h2><p>See <a href="https://github.com/shopware/frontends/blob/main/examples/commercial-customized-products/src/components/ProductCustomizedProductConfigurator.vue" target="_blank" rel="noreferrer">the source code</a> of the <code>ProductCustomizedProductConfigurator</code> Vue component.</p><p>The component is responsible for:</p><ul><li>Displaying product options in any type: text field, image upload, select, color select, image select (this one has to be fixed in the core to get the URL&#39;s of the images)</li><li>Showing corresponding additional price and currency of an option</li></ul><h2 id="implementation" tabindex="-1">Implementation <a class="header-anchor" href="#implementation" aria-label="Permalink to &quot;Implementation&quot;">​</a></h2><p>Add the mentioned component in a template. For instance in <code>&lt;ProductStatic/&gt;</code> for templates that not come from CMS:</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- part of templates/vue-demo-store/components/product/ProductStatic.vue --&gt;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- Options --&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">mt-4 lg:mt-0 lg:row-span-3</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">h2</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sr-only</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">Product information</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">h2</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">product-variants mt-10</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">ProductPrice</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:product</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">product</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">ProductUnits</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:product</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">product</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text-sm</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">ProductVariantConfigurator</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">@change</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">handleVariantChange</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>\n<span class="line highlighted"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">ProductCustomizedProductConfigurator</span><span style="color:#89DDFF;"> /&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">&lt;!-- ADDED --&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">ProductAddToCart</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:product</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">product</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><p>Overwrite a logic in <code>&lt;ProductAddToCart/&gt;</code> (or any other responsible for adding a product to cart in your template):</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">// part of templates/vue-demo-store/components/product/ProductAddToCart.vue;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// the &lt;script setup lang=&quot;ts&quot;&gt; section</span></span>\n<span class="line highlighted"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line highlighted"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">addToCart</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> customizedProductAddToCart</span><span style="color:#89DDFF;">,</span></span>\n<span class="line highlighted"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">isActive</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> isCustomizedProductActive</span><span style="color:#89DDFF;">,</span></span>\n<span class="line highlighted"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useProductCustomizedProductConfigurator</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> addToCartProxy </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line highlighted"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">isCustomizedProductActive</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>\n<span class="line highlighted"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">customizedProductAddToCart</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">addToCart</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">...</span></span>\n<span class="line"></span></code></pre></div><p>Used composable function allows to use <code>addToCart()</code> method and <code>isActive</code> computed property. Both are described in &quot;Example of usage&quot; chapter above.</p><p>There was a condition added to use a different method to add to cart a product if the product is enhanced by Custom Product template (<a href="https://docs.shopware.com/en/shopware-6-en/extensions/customproducts" target="_blank" rel="noreferrer">how to set it up</a>):</p><ul><li>if the product has a Custom Product template, then use <code>customizedProductAddToCart()</code> method.</li><li>otherwise, don&#39;t change the adding to cart behavior and use the default one</li></ul><h2 id="known-issues" tabindex="-1">Known issues <a class="header-anchor" href="#known-issues" aria-label="Permalink to &quot;Known issues&quot;">​</a></h2><ul><li>Missing images for &quot;Image select&quot; option type (reported in the extension repository)</li><li>Missing cover image (aka thumbnail) for Custom Product in the Cart (reported in the extension repository)</li><li>Display selected option for Cart Item (<a href="https://github.com/shopware/frontends/issues/456" target="_blank" rel="noreferrer">Issue</a> reported)</li></ul>',24)];const p=s(e,[["render",function(s,n,t,e,p,c){return o(),a("div",null,l)}]]);export{t as __pageData,p as default};
