import{k as e,F as a,$ as s,B as t,W as n,M as o}from"./chunks/framework.7ea3a455.js";import{s as l}from"./chunks/stackblitz.21409b38.js";const p=n('<h1 id="astro-blank-template" tabindex="-1">Astro Blank Template <a class="header-anchor" href="#astro-blank-template" aria-label="Permalink to &quot;Astro Blank Template&quot;">​</a></h1><img src="/frontends-docs/assets/astro-template.a202d201.png" alt="Demo Store Template Screenshot" class="border-1px border-#eeeeee rounded-md shadow-md my-8 hover:shadow-2xl hover:scale-105 transition duration-200"><p>The blank Astro bootstrap application with pre-installed dependencies, so you can start working on your project right away.</p><p><strong>Now you can use <code>composables</code> and <code>api-client</code> libraries in every Vue component created in an Astro project.</strong></p><h2 id="setup-run" tabindex="-1">Setup &amp; run <a class="header-anchor" href="#setup-run" aria-label="Permalink to &quot;Setup &amp; run&quot;">​</a></h2>',5),r=n('<p>Alternatively, set up the astro-blank template manually by running the following commands in a new directory:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#FFCB6B;">npx</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">tiged</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">shopware/frontends/templates/astro</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">astro-blank</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">astro-blank</span></span>\n<span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span></span>\n<span class="line"></span></code></pre></div><h2 id="configure" tabindex="-1">Configure <a class="header-anchor" href="#configure" aria-label="Permalink to &quot;Configure&quot;">​</a></h2><p>The blank template is pre-configured to connect to a public Shopware backend, so you can follow our <a href="/frontends-docs/getting-started/">building guides</a> right away.</p><p>In order to connect it to your own store backend, you need to edit the <code>env.development</code>:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;"># .env.development</span></span>\n<span class="line"><span style="color:#A6ACCD;">API_URL</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://demo-frontends.shopware.store</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#A6ACCD;">API_ACCESS_TOKEN</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SWSCBHFSNTVMAWNZDNFKSHLAYW</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">Production</p><p>For production build it&#39;s good to prepare a separate <code>.env.production</code> file containing other credentials if needed.</p></div><p>If the customization isn&#39;t enough, visit <code>src/entrypoints/_shopware.ts</code> file and customize it on your own. Like, change cookie manager, or add some other configuration for API client instance.</p><h2 id="what-next" tabindex="-1">What next? <a class="header-anchor" href="#what-next" aria-label="Permalink to &quot;What next?&quot;">​</a></h2>',9),c=JSON.parse('{"title":"Astro Blank Template","description":"","frontmatter":{},"headers":[{"level":2,"title":"Setup & run","slug":"setup-run","link":"#setup-run","children":[]},{"level":2,"title":"Configure","slug":"configure","link":"#configure","children":[]},{"level":2,"title":"What next?","slug":"what-next","link":"#what-next","children":[]}],"relativePath":"getting-started/templates/astro-template.md","filePath":"getting-started/templates/astro-template.md"}'),i={name:"getting-started/templates/astro-template.md"},d=Object.assign(i,{setup:n=>(n,c)=>{const i=o("PageRef");return e(),a("div",null,[p,s(i,{target:"blank",title:"Run on Stackblitz",page:"https://stackblitz.com/github/shopware/frontends/tree/main/templates/astro",sub:"Open the Blank Template with our browser IDE in a new window",icon:t(l)},null,8,["icon"]),r,s(i,{page:"../navigation",title:"Build your first component",sub:"Now that your blank template is set up, let's build a store"})])}});export{c as __pageData,d as default};
